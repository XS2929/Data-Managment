-- HW4.sql -- Homework 4
-- C S 347, Spring 2017, Dr. P. Cannata
-- Department of Computer Science, The University of Texas at Austin
--
--7-01
INSERT INTO PRODUCTS (PRODUCT_ID,CATEGORY_ID,PRODUCT_CODE,PRODUCT_NAME,DESCRIPTION,LIST_PRICE,DISCOUNT_PERCENT,DATE_ADDED)
VALUES (11,4,'DGX_640','Yamaha DGX 640 88-Key Digital Piano', 'Long description to come.',799.99, 0, sysdate);
--7-02
UPDATE PRODUCTS
SET DISCOUNT_PERCENT=35
WHERE PRODUCT_ID =11;
--7-03
DELETE FROM CATEGORIES 
WHERE CATEGORY_ID=4;
DELETE FROM PRODUCTS
WHERE CATEGORY_ID=4;
--8-04
SELECT ORDER_DATE, TO_CHAR(ORDER_DATE,'YYYY') AS ORDER_YEAR,TO_CHAR(ORDER_DATE,'MON-DD-YY') AS "MON-DD-YYYY",
TO_CHAR(ORDER_DATE,'HH:MM AM') AS "HH MM AM/PM",TO_CHAR(ORDER_DATE,'MM/DD/YY HH24:SS')
FROM ORDERS;
--8-05
SELECT CARD_NUMBER,LENGTH(CARD_NUMBER) AS "LENGTH",SUBSTR(CARD_NUMBER,13,4) AS LAST_DIGITS, CONCAT('XXXX-XXXX-XXXX-',SUBSTR(CARD_NUMBER,13,4)) AS "XXXX-XXXX-XXXX-NNNN"
FROM ORDERS;
--11-01
CREATE OR REPLACE VIEW CUSTOMER_ADDRESS AS
SELECT CUSTOMERS.CUSTOMER_ID,CUSTOMERS.EMAIL_ADDRESS,CUSTOMERS.LAST_NAME,CUSTOMERS.FIRST_NAME,
BILL.LINE1 AS BILL_LINE1,BILL.LINE2 AS BILL_LINE2,BILL.CITY AS BILL_CITY,BILL.STATE AS BILL_STATE,BILL.ZIP_CODE AS BILL_ZIPCODE,
SHIP.LINE1 AS SHIP_LINE1,SHIP.LINE2 AS SHIP_LINE2,SHIP.CITY AS SHIP_CITY,SHIP.STATE AS SHIP_STATE,SHIP.ZIP_CODE AS SHIP_ZIPCODE
FROM CUSTOMERS JOIN ADDRESSES BILL ON CUSTOMERS.BILLING_ADDRESS_ID=BILL.ADDRESS_ID JOIN ADDRESSES SHIP ON CUSTOMERS.SHIPPING_ADDRESS_ID=SHIP.ADDRESS_ID
ORDER BY CUSTOMERS.LAST_NAME,CUSTOMERS.FIRST_NAME;
--11-02
SELECT CUSTOMER_ID,LAST_NAME,FIRST_NAME,BILL_LINE1
FROM CUSTOMER_ADDRESS;
--11-03
CREATE OR REPLACE VIEW ORDER_ITEM_PRODUCTS AS
SELECT ORDERS.ORDER_ID,ORDERS.ORDER_DATE,ORDERS.TAX_AMOUNT,ORDERS.SHIP_DATE,
ORDER_ITEMS.ITEM_PRICE,ORDER_ITEMS.DISCOUNT_AMOUNT,ORDER_ITEMS.ITEM_PRICE-ORDER_ITEMS.DISCOUNT_AMOUNT AS FINAL_PRICE,ORDER_ITEMS.QUANTITY,(ORDER_ITEMS.ITEM_PRICE-ORDER_ITEMS.DISCOUNT_AMOUNT)*ORDER_ITEMS.QUANTITY AS ITEM_TOTAL,
PRODUCTS.PRODUCT_NAME
FROM ORDERS JOIN ORDER_ITEMS ON ORDERS.ORDER_ID=ORDER_ITEMS.ORDER_ID JOIN PRODUCTS ON ORDER_ITEMS.PRODUCT_ID=PRODUCTS.PRODUCT_ID;
--11-04
CREATE OR REPLACE VIEW PRODUCT_SUMMARY AS
SELECT PRODUCT_NAME, COUNT(*) AS ORDER_COUNT, SUM(ITEM_TOTAL) AS ORDER_TOTAL
FROM ORDER_ITEM_PRODUCTS
GROUP BY PRODUCT_NAME;
--11-05
SELECT * FROM
(SELECT PRODUCT_NAME,ORDER_TOTAL FROM PRODUCT_SUMMARY
ORDER BY ORDER_TOTAL DESC)
WHERE ROWNUM<=5;

